#Von Chat GPT das meiste!
openapi: '3.0.2'
info:
  title: Books APi
  version: '1.0'
servers:
  - url: http://localhost:3000
paths:
  /books:
    get:
      summary: Get All Books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create new Book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{isbn}:
    get:
      summary: Get a book by ISBN
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    post:
      summary: Update a book by ISBN
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ISBN
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Book not found
  /lends:
    get:
      summary: Get all lent books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LentBook'
    post:
      summary: Add a new lent book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LentBook'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LentBook'
  /lends/{id}:
    get:
      summary: Get a lent book by ID
      parameters:
        - name: id
          in: path
          description: ID of the lent book to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LentBook'
    patch:
      summary: Update a lent book by ID
      parameters:
        - name: id
          in: path
          description: ID of the lent book to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LentBook'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LentBook'
components:
  schemas:
    Book:
      type: object
      properties:
        isbn:
          type: string
        title:
          type: string
        year:
          type: integer
        author:
          type: string
    LentBook:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        isbn:
          type: string
        borrowed_at:
          type: string
        returned_at:
          type: string